{"version":3,"file":"static/js/47.80c70d07.chunk.js","mappings":"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","sources":["components/CastGalleryItem/CastGalleryItem.styled.jsx","components/CastGalleryItem/CastGalleryItem.jsx","components/CastGallery/CastGallery.jsx","components/Cast/Cast.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","helpers/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Thumb = styled.div`\n  width: 280px;\n\n  border-radius: 4px;\n  overflow: hidden;\n\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Image = styled.img`\n  /* height: 100%; */\n  width: 100%;\n  object-fit: cover;\n\n  transition: transform var(--animation-duration) var(--timing-function);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport { Thumb, Image };\n","import PropTypes from 'prop-types';\n\nimport noImageIcon from '../../icons/noImageIcon-500x750.png';\n\nimport {\n  Thumb,\n  Image,\n} from 'components/CastGalleryItem/CastGalleryItem.styled';\n\nconst CastGalleryItem = ({ element: { profile_path, name, character } }) => {\n  return (\n    <>\n      <Thumb>\n        {profile_path ? (\n          <Image\n            loading=\"lazy\"\n            src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n            alt={name}\n          />\n        ) : (\n          <Image src={noImageIcon} alt={name} />\n        )}\n      </Thumb>\n      <p>{name}</p>\n      {character && <p>Character: {character}</p>}\n    </>\n  );\n};\n\nCastGalleryItem.propTypes = {\n  element: PropTypes.shape({\n    profile_path: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default CastGalleryItem;\n","import PropTypes from 'prop-types';\n\nimport CastGalleryItem from 'components/CastGalleryItem';\n\nimport { List } from 'components/MoviesGallery/MoviesGallery.styled';\n\nconst CastGallery = ({ data }) => {\n  return (\n    <List>\n      {data.map(element => (\n        <li key={element.id}>\n          <CastGalleryItem element={element} />\n        </li>\n      ))}\n    </List>\n  );\n};\n\nCastGallery.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default CastGallery;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nimport { fetchMovieCast } from 'helpers/api';\n\nimport Section from 'components/Section/Section';\nimport Loader from 'components/Loader/Loader';\nimport CastGallery from 'components/CastGallery';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const fetchMovieCastData = async () => {\n      setIsLoading(true);\n\n      try {\n        const {\n          data: { cast },\n        } = await fetchMovieCast(movieId);\n\n        getMovieCast(cast);\n      } catch (error) {\n        console.log('ERROR', error); //???\n        Report.failure('ERROR', `${error.message}`, 'Close');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const getMovieCast = cast => {\n      if (cast.length !== 0) {\n        setMovieCast(cast);\n      } else {\n        Notify.failure('Sorry, there are no movie cast.');\n      }\n    };\n\n    fetchMovieCastData();\n  }, [movieId]);\n\n  console.log('movieCast', movieCast);\n  return (\n    <>\n      <Section>\n        {movieCast.length !== 0 && <CastGallery data={movieCast} />}\n      </Section>\n\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nconst LoaderWrap = styled.div`\n  position: fixed;\n  top: calc(50% - 48px);\n  left: calc(50% - 48px);\n  z-index: 1100;\n`;\n\nexport { LoaderWrap };\n","import { RotatingLines } from 'react-loader-spinner';\n\nimport { LoaderWrap } from 'components/Loader/Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrap>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderWrap>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(278px, 1fr));\n  grid-gap: 16px;\n\n  margin-bottom: 20px;\n  padding: 0;\n`;\n\nexport { List };\n","import styled from 'styled-components';\n\nconst SectionWrapper = styled.section`\n  padding: 20px 0;\n`;\n\nconst Container = styled.div`\n  max-width: 1440px;\n  padding-right: 16px;\n  padding-left: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Title = styled.h1`\n  /* position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px; */\n`;\n\nexport { SectionWrapper, Container, Title };\n","import PropTypes from 'prop-types';\n\nimport {\n  SectionWrapper,\n  Container,\n  Title,\n} from 'components/Section/Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <Container>\n        <Title>{title}</Title>\n        {children}\n      </Container>\n    </SectionWrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n// const API_KEY = '96335405b345233f2a3dbecabd0603e6'; //?\nconst options = {\n  method: 'GET',\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NjMzNTQwNWIzNDUyMzNmMmEzZGJlY2FiZDA2MDNlNiIsInN1YiI6IjY0YTMwMjdiZTlkYTY5MDBhZTJmMTRmNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Z-JNYq0lLf2QZFKI9PWQ6B2ydwjA4oq3z-bATNKk5WQ',\n  },\n};\n\nconst fetchTrendMovies = async currentPage => {\n  const endpoint = '/trending/movie/day';\n\n  const params = new URLSearchParams({\n    page: currentPage,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nconst fetchMovies = async (query, currentPage) => {\n  const endpoint = '/search/movie';\n\n  const params = new URLSearchParams({\n    query: query,\n    include_adult: 'false',\n    page: currentPage,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nconst fetchMovieDetails = async movieId => {\n  const endpoint = `/movie/${movieId}`;\n\n  const response = await axios.request(`${BASE_URL}${endpoint}`, options);\n\n  return response;\n};\n\nconst fetchMovieCast = async movieId => {\n  const endpoint = `/movie/${movieId}/credits`;\n\n  const response = await axios.request(`${BASE_URL}${endpoint}`, options);\n\n  return response;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const endpoint = `/movie/${movieId}/reviews`;\n\n  const params = new URLSearchParams({\n    page: 1,\n  });\n\n  const response = await axios.request(\n    `${BASE_URL}${endpoint}?${params}`,\n    options\n  );\n\n  return response;\n};\n\nexport {\n  fetchTrendMovies,\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n"],"names":["Thumb","styled","Image","element","profile_path","name","character","loading","src","alt","noImageIcon","data","map","id","useState","movieCast","setMovieCast","isLoading","setIsLoading","movieId","useParams","useEffect","fetchMovieCastData","fetchMovieCast","cast","getMovieCast","console","log","Report","message","length","Notify","Section","Loader","LoaderWrap","strokeColor","strokeWidth","animationDuration","width","visible","List","SectionWrapper","Container","Title","title","children","BASE_URL","options","method","params","language","headers","accept","Authorization","fetchTrendMovies","currentPage","URLSearchParams","page","axios","response","fetchMovies","query","include_adult","fetchMovieDetails","endpoint","fetchMovieReviews"],"sourceRoot":""}